name: CI Pipeline

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  quality-checks:
    name: Code Quality & Type Safety
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript type checking
        run: npm run type-check

      - name: Run ESLint
        run: npm run lint

      - name: Check code formatting
        run: npm run format:check

      - name: Run all validation checks
        run: npm run validate

  expo-checks:
    name: Expo Build & EAS Validation
    runs-on: ubuntu-latest
    needs: quality-checks

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Setup Expo CLI
        run: npm install -g @expo/cli@latest

      - name: Install dependencies
        run: npm ci

      - name: Verify Expo project structure
        run: npx expo doctor

      - name: Check for Metro bundler
        run: npx expo export --platform web --dev
        env:
          NODE_ENV: production

      - name: Upload export artifacts
        uses: actions/upload-artifact@v4
        with:
          name: expo-web-build
          path: dist/
          retention-days: 1

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate
        continue-on-error: false

  pr-status:
    name: PR Status Check
    runs-on: ubuntu-latest
    needs: [quality-checks, expo-checks, security-audit]
    if: github.event_name == 'pull_request'

    steps:
      - name: PR Ready
        run: |
          echo "âœ… All checks passed!"
          echo "PR is ready for review and merge."
